# How to create k8s cluster config as secret
# k create secret generic kind-creds -n crossplane-system-dev --from-file=credentials=./default-config
# before creating secret update cluster.server value with Kubernetes API IP and port
# see https://kubernetes.io/docs/tasks/run-application/access-api-from-pod/#directly-accessing-the-rest-api
apiVersion: tf.upbound.io/v1beta1
kind: ProviderConfig
metadata:
  name: default
spec:
  # Note that unlike most provider configs this one supports an array of
  # credentials. This is because each Terraform workspace uses a single
  # Crossplane provider config, but could use multiple Terraform providers each
  # with their own credentials.
  credentials:
    - filename: default-config
      source: Secret
      secretRef:
        namespace: crossplane-system-dev
        name: kind-creds
        key: credentials
  # This optional configuration block can be used to inject HCL into any
  # workspace that uses this provider config, for example to setup Terraform
  # providers.
  configuration: |
    provider "kubernetes" {
      config_path   = "default-config"
      config_context = "kind-sicily"
    }

    // Modules _must_ use remote state. The provider does not persist state.
    terraform {
      backend "kubernetes" {
        secret_suffix     = "providerconfig-default"
        namespace         = "crossplane-system-dev"
        in_cluster_config = true
      }
    }